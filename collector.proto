syntax = "proto3";

package lightstep.collector;

option go_package = "github.com/lightstep/lightstep-tracer-go/collectorpb";
option objc_class_prefix = "LSPB";
option java_multiple_files = true;
option java_package = "com.lightstep.tracer.grpc";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

option (gogoproto.protosizer_all) = true;
option (gogoproto.sizer_all) = false;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;

message SpanContext {
    uint64 trace_id = 1;
    uint64 span_id = 2;
    map<string, string> baggage = 3;
}

// Represent both tags and log fields.
message KeyValue {
    string key = 1;
    oneof value {
        // Holds arbitrary string data; well-formed JSON strings should go in
        // json_value.
        string string_value = 2;
        int64 int_value = 3;
        double double_value = 4;
        bool bool_value = 5;
        // Must be a well-formed JSON value. Truncated JSON should go in
        // string_value. Should not be used for tags.
        string json_value = 6;
    }
}

message Log {
    google.protobuf.Timestamp timestamp = 1 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    repeated KeyValue fields = 2 [(gogoproto.nullable) = false];
}

message Reference {
    enum Relationship {
        CHILD_OF = 0;
        FOLLOWS_FROM = 1;
    }
    Relationship relationship = 1;
    SpanContext span_context = 2 [(gogoproto.nullable) = false];
}

message Span {
    SpanContext span_context = 1 [(gogoproto.nullable) = false];
    string operation_name = 2;
    repeated Reference references = 3 [(gogoproto.nullable) = false];
    google.protobuf.Timestamp start_timestamp = 4  [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    uint64 duration_micros = 5 [(gogoproto.stdduration) = true];
    repeated KeyValue tags = 6 [(gogoproto.nullable) = false];
    repeated Log logs = 7 [(gogoproto.nullable) = false];
}

message Reporter {
    uint64 reporter_id = 1;
    repeated KeyValue tags = 4 [(gogoproto.nullable) = false];
}

message MetricsSample {
    string name = 1;
    oneof value {
        int64 int_value = 2;
        double double_value = 3;
    }
}

message InternalMetrics {
    google.protobuf.Timestamp start_timestamp = 1 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    uint64 duration_micros = 2 [(gogoproto.stdduration) = true];
    repeated Log logs = 3 [(gogoproto.nullable) = false];
    repeated MetricsSample counts = 4 [(gogoproto.nullable) = false];
    repeated MetricsSample gauges = 5 [(gogoproto.nullable) = false];
}

message Auth {
    string access_token = 1;
}

message ReportRequest {
    Reporter reporter = 1 [(gogoproto.nullable) = false];
    Auth auth = 2 [(gogoproto.nullable) = false];
    repeated Span spans = 3 [(gogoproto.nullable) = false];
    int32 timestamp_offset_micros = 5 [(gogoproto.stdduration) = true];
    InternalMetrics internal_metrics = 6 [(gogoproto.nullable) = false];
}

message Command {
    bool disable = 1;
}

message ReportResponse {
    repeated Command commands = 1 [(gogoproto.nullable) = false];
    google.protobuf.Timestamp receive_timestamp = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    google.protobuf.Timestamp transmit_timestamp = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    repeated string errors = 4;
    repeated string warnings = 5;
    repeated string infos = 6;
}

service CollectorService {
    rpc Report(ReportRequest) returns (ReportResponse) {
       option (google.api.http) = {
          post: "/api/v2/reports"
          body: "*"
          additional_bindings {
             get: "/api/v2/reports"
          }
       };
    }
}
